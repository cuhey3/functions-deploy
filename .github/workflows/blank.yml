name: ApiDeploy

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
    inputs:
        deploytarget:
          description: 'デプロイターゲット[sdtc1 - sdtc5]'
          required: true
          default: 'sdtc1'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Cloud Functions Deploy
        # You may pin to the exact commit or the version.
        # uses: google-github-actions/deploy-cloud-functions@7faa962492ec7b650406d15004fc19c6880f94d0
        uses: google-github-actions/deploy-cloud-functions@v0.1.2
        with:
          # Optional service account key to use for authentication to GCP. This should be the JSON formatted private key which can be exported from the Cloud Console. The value can be raw or base64-encoded.
          credentials: # optional
          # Name of the Cloud Function.
          name: 
          # Description for the Cloud Function.
          description: # optional
          # Project to deploy the function in.
          project_id: # optional
          # Region to deploy the function in. Defaults to us-central1, if not specified.
          region: # optional
          # Path to function deployment directory within the source repo.
          source_dir: # optional
          # List of key-value pairs to set as environment variables in the form KEY1=VALUE1,KEY2=VALUE2.
          env_vars: # optional
          # Name of a function (as defined in source code) that will be executed. Defaults to the resource name suffix, if not specified. 
          entry_point: # optional
          # Runtime to use for the function.
          runtime: 
          # The VPC Access connector that the function can connect to.
          vpc_connector: # optional
          # The email address of the IAM service account associated with the function at runtime.
          service_account_email: # optional
          # The function execution timeout.
          timeout: # optional
          # The maximum number of instances for the function.
          max_instances: # optional
          # Specifies which action should trigger the function.
          event_trigger_type: # optional
          # Specifies which resource from eventTrigger is observed.
          event_trigger_resource: # optional
          # The hostname of the service that should be observed.
          event_trigger_service: # optional
